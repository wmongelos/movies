{"ast":null,"code":"var _jsxFileName = \"/Users/wmongelos/Desktop/movies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport Movie from './components/Movie';\nimport { URL_MOVIES } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const searchEl = useRef(null);\n  useEffect(() => {\n    fetch(URL_MOVIES).then(response => {\n      return response.json();\n    }).then(data => {\n      setMovies(data);\n    });\n  }, []);\n\n  const fetchData = URL => {};\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const search = searchEl.current.value;\n\n    if (search) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search\",\n          ref: searchEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, { ...movie\n      }, movies.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"XtKv2DO7+1K7n4XB3mAiyxmjWjo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wmongelos/Desktop/movies/client/src/App.js"],"names":["useEffect","useRef","useState","Movie","URL_MOVIES","App","movies","setMovies","searchEl","fetch","then","response","json","data","fetchData","URL","onSubmitHandler","event","preventDefault","search","current","value","map","movie","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMM,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,KAAK,CAACL,UAAD,CAAL,CAAkBM,IAAlB,CAAwBC,QAAD,IAAY;AACjC,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAESG,IAAD,IAAQ;AACdN,MAAAA,SAAS,CAACM,IAAD,CAAT;AACD,KAJD;AAKD,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMC,SAAS,GAAIC,GAAD,IAAS,CAE1B,CAFD;;AAIA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGX,QAAQ,CAACY,OAAT,CAAiBC,KAAhC;;AAEA,QAAGF,MAAH,EAAU,CAET;AACF,GAPD;;AASA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEH,eAAhB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,WAAW,EAAC,QAAjC;AAA0C,UAAA,GAAG,EAAER;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAOA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGF,MAAM,CAACgB,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD,OAA2BA;AAA3B,SAAYjB,MAAM,CAACkB,EAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADF;AAeD,CAxCD;;GAAMnB,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport Movie from './components/Movie';\nimport { URL_MOVIES } from './Api';\n\nconst App = () => {\n  const [movies, setMovies] = useState([])\n  const searchEl = useRef(null)\n\n  useEffect(()=>{\n    fetch(URL_MOVIES).then((response)=>{\n      return response.json()\n    }).then((data)=>{\n      setMovies(data);\n    })\n  },[])\n\n  const fetchData = (URL) => {\n    \n  }\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const search = searchEl.current.value;\n\n    if(search){\n\n    }\n  }\n\n  return(\n    <>\n    <div className=\"header\">\n      <form onSubmit={onSubmitHandler}>\n        <input type=\"search\" placeholder=\"Search\" ref={searchEl}/>\n      </form>\n    </div>\n\n    <div className=\"movie-container\">\n      {movies.map((movie) => (\n        <Movie key={movies.id} {...movie} />\n        ))}\n    </div>\n    </>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}